{{range gets "/vhosts/*"}}
  {{$json := json .Value}}
  {{$name := base .Key}}

upstream {{$name}} {
  {{range $json.upstreams}}
    server {{.}};
  {{end}}
}

server {
    server_name {{$json.server_name}};
    listen 80;

    {{if $json.ssl }}

    listen 443 ssl;
    ssl_certificate      /etc/nginx/certs/{{$json.ssl.cert}};
    ssl_certificate_key  /etc/nginx/certs/{{$json.ssl.key}};
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE+RSAGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!aNULL!eNull:!EXPORT:!DES:!3DES:!MD5:!DSS;

    {{end}}

    location / {
        proxy_pass        http://{{$name}};
        proxy_redirect    default;
   }
}

{{end}}

server {
    server_name _;

    listen 80 default_server;
    listen 443 ssl default_server;
    ssl_certificate      /etc/nginx/certs/default.crt;
    ssl_certificate_key  /etc/nginx/certs/default.key;
    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE+RSAGCM:ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:!aNULL!eNull:!EXPORT:!DES:!3DES:!MD5:!DSS;

    return 444;
}

proxy_set_header  Host             $host;
proxy_set_header  X-Real-IP        $remote_addr;
proxy_set_header  X-Forwarded-For  $proxy_add_x_forwarded_for;
proxy_set_header  X-Forwarded-Prot $scheme;
